{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","PRODUCTS","brocoli","key","name","imageURL","keywords","price","grapes","strawberries","cheese","yogurt","toothpaste","shampoo","soap","wine","napkins","App","props","obj","fn","previous_cart_JSON","localStorage","getItem","previous_cart","JSON","parse","v","Object","entries","map","i","k","state","cart","searchKey","keyStr","trim","this","setState","includes","fromEntries","filter","product_key","product","currentCart","itemIndex","cart_list","index","item","itemInCart","push","quantity","storeToLocalStorage","parsedCart","x","setItem","stringify","className","src","logo","alt","id","item_list","onChange","handleCartItem","onClick","handleSearch","product_obj","generateProduct_Json","pictureOnClick","addToCart","React","Component","Home","e","target","content","keys","length","current_product","handleClick","showProducts","Cart","on","sortDirection","selectedHeaderIndex","ascSort","bind","descSort","row1","row2","headerIndex","localeCompare","getColumnValue","val1","sortDir","flipSortDirection","reduce","acc","val","counter","isAdd","target_item_num","splice","tableHead","scope","sortByHeader","cmp","sort","type","handleCartChange","colSpan","calculateTotalPrice","tableBody","itemCount","toggleDropDown","divClass","showCartItem_asTable","showCartItem_asDropDown","SearchArea","inputValue","value","searchStr","toLowerCase","placeholder","list","autoComplete","updateInputValue","onKeyDown","searchProductKeyword","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7c10f7e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// Global helper function\nconst objectFilter = (obj, fn) => {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([k, v], i) => fn(v, k, i))\n  );\n};\nconst objectMapper = (obj, fn) => {\n  return Object.entries(obj).map(([k, v], i) => fn(v, k, i));\n};\n// Analogous data from API call\nconst PRODUCTS = {\n  brocoli: {\n    key: \"brocoli\",\n    name: \"Brocoli\",\n    imageURL:\n      \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/broccoli.jpg\",\n    keywords: [\"vegetable\", \"diet\", \"food\", \"fresh\", \"green\"],\n    price: 4,\n  },\n  grapes: {\n    name: \"Grapes\",\n    key: \"grapes\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/grape.jpg\",\n    keywords: [\"food\", \"fresh\", \"fruit\", \"green\"],\n    price: 5,\n  },\n  strawberries: {\n    name: \"Strawberries\",\n    key: \"strawberries\",\n    imageURL:\n      \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/strawberry.jpg\",\n    keywords: [\"food\", \"fresh\", \"fruit\", \"breakfast\"],\n    price: 6,\n  },\n  cheese: {\n    name: \"Cheese\",\n    key: \"cheese\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/cheese2.png\",\n    keywords: [\"dairy\", \"breakfast\", \"food\"],\n    price: 5,\n  },\n  yogurt: {\n    name: \"Yogurt\",\n    key: \"yogurt\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/yoghurt.png\",\n    keywords: [\"dairy\", \"food\", \"breakfast\"],\n    price: 3,\n  },\n  toothpaste: {\n    name: \"Toothpaste\",\n    key: \"toothpaste\",\n    imageURL:\n      \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/toothpaste.png\",\n    keywords: [\"dental\", \"hygiene\"],\n    price: 10,\n  },\n  shampoo: {\n    name: \"Shampoo\",\n    key: \"shampoo\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/shampoo.png\",\n    keywords: [\"hair\", \"hygiene\"],\n    price: 15,\n  },\n  soap: {\n    name: \"Soap\",\n    key: \"soap\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/soap.jpg\",\n    keywords: [\"body\", \"hygiene\"],\n    price: 2,\n  },\n  wine: {\n    name: \"Wine\",\n    key: \"wine\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/wine.png\",\n    keywords: [\"alcohol\", \"bar\", \"beverage\"],\n    price: 12,\n  },\n  napkins: {\n    name: \"Napkins\",\n    key: \"napkins\",\n    imageURL: \"https://cdn.jsdelivr.net/gh/josecarlosgt/infosys280/napkin.png\",\n    keywords: [\"bar\", \"table\"],\n    price: 4,\n  },\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const previous_cart_JSON = localStorage.getItem(\"user_cart\");\n    const previous_cart = previous_cart_JSON\n      ? objectMapper(JSON.parse(previous_cart_JSON), (v) => v)\n      : [];\n    this.state = {\n      cart: previous_cart, // {item:{PRODUCTS_item},quantity}\n      searchKey: null,\n    };\n  }\n  handleSearch(keyStr) {\n    if (keyStr) {\n      // validate keys\n      // check for only whitespace\n      keyStr = keyStr.trim();\n    }\n    this.setState({\n      searchKey: keyStr,\n    });\n  }\n  generateProduct_Json() {\n    const key = this.state.searchKey;\n    // check for empty string\n    if (key) {\n      // Only accept one complete word search or partial include within the name\n      const searchResultObject = objectFilter(PRODUCTS, (v) => {\n        return v.keywords.includes(key) || v.key.includes(key);\n      });\n      return searchResultObject;\n    } else {\n      return PRODUCTS;\n    }\n  }\n  // Only handle one item per time\n  addToCart(product_key) {\n    const product = PRODUCTS[product_key];\n    const currentCart = this.state.cart;\n    // Function object\n    const itemInCart = (cart_list, product) => {\n      for (const [index, obj] of cart_list.entries()) {\n        if (obj.item === product) return index;\n      }\n      return null;\n    };\n    const itemIndex = itemInCart(currentCart, product);\n    // handle index 0\n    if (itemIndex === null) {\n      currentCart.push({ item: product, quantity: 1 });\n      this.setState({\n        cart: currentCart,\n      });\n    } else {\n      currentCart[itemIndex].quantity += 1;\n      this.setState({\n        cart: currentCart,\n      });\n    }\n    this.storeToLocalStorage();\n  }\n  handleCartItem(cart_list) {\n    this.setState({\n      cart: cart_list,\n    });\n    this.storeToLocalStorage();\n  }\n  storeToLocalStorage() {\n    //store cart in local storage\n    const parsedCart = this.state.cart.map((x, i) => [`item_${i}`, x]);\n    localStorage.setItem(\n      \"user_cart\",\n      JSON.stringify(Object.fromEntries(parsedCart))\n    );\n  }\n  render() {\n    return (\n      <div className=\"App container\">\n        <header className=\"jumbotron text-left d-flex\">\n          <img src={logo} alt=\"logo\" className=\"col-2 img-fluid\" id=\"logo\" />\n          <Cart\n            item_list={this.state.cart}\n            onChange={(cart_list) => this.handleCartItem(cart_list)}\n          />\n          <SearchArea onClick={(keyStr) => this.handleSearch(keyStr)} />\n        </header>\n\n        <main>\n          <Home\n            product_obj={this.generateProduct_Json()}\n            pictureOnClick={(product_key) => this.addToCart(product_key)}\n          />\n        </main>\n\n        <footer>\n          <small>&copy; 2020 No copyright</small>\n        </footer>\n      </div>\n    );\n  }\n}\nclass Home extends React.Component {\n  handleClick(e) {\n    const product_key = e.target.id;\n    return this.props.pictureOnClick(product_key);\n  }\n  showProducts(product_obj) {\n    let content = [];\n    if (Object.keys(product_obj).length === 0) {\n      return (\n        <li key=\"li_no_match\" className=\"col-11\">\n          No products match this query\n        </li>\n      );\n    }\n    for (let product_key in product_obj) {\n      const current_product = product_obj[product_key];\n      //key,name,imageURL,keywords,price\n      content.push(\n        <li\n          key={\"li_\" + current_product.name}\n          className=\"col-xs-11 col-sm-6 col-md-4 col-xl-3\"\n        >\n          <figure className=\"figure\">\n            <img\n              src={current_product.imageURL}\n              alt={current_product.name}\n              id={current_product.key}\n              className=\"figure-img img-fluid pointer\"\n              onClick={(e) => this.handleClick(e)}\n            />\n            <figcaption className=\"figure-caption\">\n              {current_product.name} ${current_product.price}\n            </figcaption>\n          </figure>\n        </li>\n      );\n    }\n    return content;\n  }\n  render() {\n    return (\n      <ul className=\"row p-0 align-items-end justify-content-start\">\n        {this.showProducts(this.props.product_obj)}\n      </ul>\n    );\n  }\n}\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // for dropdown cart table\n      on: false,\n      // for sortable table\n      sortDirection: \"asc\", // 'asc' and ' desc'\n      selectedHeaderIndex: 0,\n    };\n    this.ascSort = this.ascSort.bind(this);\n    this.descSort = this.descSort.bind(this);\n  }\n  getColumnValue(row1, row2, headerIndex) {\n    switch (headerIndex) {\n      case 1:\n        return [row1.item.name.localeCompare(row2.item.name), 0];\n      case 2:\n        return [row1.item.price, row2.item.price];\n      case 3:\n        return [row1.quantity, row2.quantity];\n      default:\n        return [0, 0];\n    }\n  }\n  ascSort(row1, row2) {\n    const headerIndex = this.state.selectedHeaderIndex;\n    const [val1, val2] = this.getColumnValue(row1, row2, headerIndex);\n    return val1 - val2;\n  }\n  descSort(row1, row2) {\n    const headerIndex = this.state.selectedHeaderIndex;\n    const [val1, val2] = this.getColumnValue(row1, row2, headerIndex);\n    return val2 - val1;\n  }\n  flipSortDirection() {\n    return this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n  }\n  sortByHeader(i) {\n    let sortDir = this.state.sortDirection;\n    let headerIndex = this.state.selectedHeaderIndex;\n    if (headerIndex === i) {\n      sortDir = this.flipSortDirection();\n    } else {\n      sortDir = \"asc\";\n      headerIndex = i;\n    }\n    this.setState({\n      sortDirection: sortDir,\n      selectedHeaderIndex: headerIndex,\n    });\n  }\n  calculateTotalPrice() {\n    const total = this.props.item_list.reduce(\n      (acc, val) => acc + val.item.price * val.quantity,\n      0\n    );\n    return total;\n  }\n  handleCartChange(counter, isAdd) {\n    let item_list = this.props.item_list;\n    const target_item_num = item_list[counter].quantity;\n    if (isAdd) {\n      item_list[counter].quantity += 1;\n    } else if (target_item_num === 1) {\n      item_list.splice(counter, 1);\n    } else {\n      item_list[counter].quantity -= 1;\n    }\n    return this.props.onChange(item_list);\n  }\n  showCartItem_asTable() {\n    const cart = this.props.item_list;\n    const tableHead = [\n      <thead key=\"tHeader\">\n        <tr key=\"thead\">\n          <th scope=\"col\" key=\"thead-0\">\n            #\n          </th>\n          <th scope=\"col\" key=\"thead-1\" onClick={() => this.sortByHeader(1)}>\n            Product\n          </th>\n          <th scope=\"col\" key=\"thead-2\" onClick={() => this.sortByHeader(2)}>\n            Price\n          </th>\n          <th scope=\"col\" key=\"thead-3\" onClick={() => this.sortByHeader(3)}>\n            Quantity\n          </th>\n        </tr>\n      </thead>,\n    ];\n    if (cart.length === 0) {\n      return (\n        <div key=\"no_item_in_cart\" className=\"alert alert-info\">\n          No products in Cart\n        </div>\n      );\n    }\n    let content = [];\n    // determine comparator function\n    const cmp =\n      this.state.sortDirection === \"asc\" ? this.ascSort : this.descSort;\n    cart.sort(cmp);\n    for (const [counter, obj] of cart.entries()) {\n      const current_product = obj.item;\n      const quantity = obj.quantity;\n      //key,name,imageURL,keywords,price\n      content.push(\n        <tr key={\"tbody-\" + counter}>\n          <th key={\"tbody-\" + counter + \"-0\"} scope=\"row\">\n            {counter + 1}\n          </th>\n          <td key={\"tbody-\" + counter + \"-1\"}>{current_product.name}</td>\n          <td key={\"tbody-\" + counter + \"-2\"}>${current_product.price}</td>\n          <td key={\"tbody-\" + counter + \"-3\"}>\n            {quantity}&nbsp;\n            <button\n              type=\"button\"\n              onClick={() => this.handleCartChange(counter, true)}\n              className=\"btn btn-sm btn-link py-0\"\n            >\n              +\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.handleCartChange(counter, false)}\n              className=\"btn btn-sm btn-link py-0\"\n            >\n              -\n            </button>\n          </td>\n        </tr>\n      );\n    }\n\n    content.push(\n      <tr key=\"tbody-last\" className=\"table-secondary\">\n        <th key=\"tbody-last-0\" scope=\"row\">\n          Total\n        </th>\n        <td key=\"tbody-last-1\" colSpan=\"2\">\n          ${this.calculateTotalPrice()}\n        </td>\n        <td>\n          <button type=\"button\" className=\"btn btn-sm btn-link\">\n            CheckOut\n          </button>\n        </td>\n      </tr>\n    );\n\n    let tableBody = <tbody key=\"tBody\">{content}</tbody>;\n    return (\n      <table className=\"table table-light table-striped text-left\">\n        {tableHead}\n        {tableBody}\n      </table>\n    );\n  }\n  showCartItem_asDropDown() {\n    const itemCount = this.props.item_list.length;\n    let divClass = \"dropdown-content mt-1\";\n    const content = (\n      <div>\n        <button className=\"btn btn-info\" onClick={() => this.toggleDropDown()}>\n          Cart: {itemCount}\n        </button>\n        <div className={this.state.on ? divClass : divClass + \" hide\"}>\n          {this.showCartItem_asTable()}\n        </div>\n      </div>\n    );\n    return content;\n  }\n  toggleDropDown() {\n    this.setState({\n      on: !this.state.on,\n    });\n  }\n  render() {\n    return this.showCartItem_asDropDown();\n  }\n}\nclass SearchArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n    };\n  }\n  updateInputValue(e) {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  }\n  searchProductKeyword(e = null) {\n    if (e && e.key !== \"Enter\") {\n      return;\n    }\n    const searchStr = this.state.inputValue.toLowerCase();\n    return this.props.onClick(searchStr);\n  }\n  render() {\n    return (\n      <div className=\"ml-auto\" id=\"searchArea\">\n        <div className=\"form-inline\">\n          <input\n            className=\"form-control mr-1\"\n            placeholder=\"Search with keyword\"\n            type=\"text\"\n            id=\"searchBar\"\n            list=\"product_keyword_list\"\n            autoComplete=\"off\"\n            onChange={(e) => this.updateInputValue(e)}\n            onKeyDown={(e) => this.searchProductKeyword(e)}\n          />\n          <datalist id=\"product_keyword_list\">\n            <option value=\"food\" />\n            <option value=\"breakfast\" />\n            <option value=\"beverage\" />\n          </datalist>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={() => this.searchProductKeyword()}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}